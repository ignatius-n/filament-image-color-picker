function g({image:r,state:a,format:c}){function i(t){let e=new Image;return e.src=t,new Promise((o,n)=>{e.complete?o(e):e.addEventListener("load",()=>o(e)),e.addEventListener("error",n)})}return{canvas:null,previewColor:null,selectedColor:a,init(){let t=this.$refs.canvas;i(r).then(e=>{t.width=e.width,t.height=e.height;let o=t.getContext("2d");console.log(e.src),o.drawImage(e,0,0)}),this.canvas=t},onClick(t){this.selectColor(t),this.selectedColor=this.previewColor},selectColor(t){let{x:e,y:o}=this.getRelativeCoordinates(t.clientX,t.clientY),n=this.canvas.getContext("2d"),{data:s}=n.getImageData(e,o,1,1);this.previewColor=this.formatColor(s)},getRelativeCoordinates(t,e){let o=this.canvas,n=o.getBoundingClientRect(),s=o.width/n.width,l=o.height/n.height,h=(t-n.left)*s,d=(e-n.top)*l;return{x:h,y:d}},colorHex(t,e,o){return`#${[t,e,o].map(s=>s.toString(16).padStart(2,"0").toUpperCase()).join("")}`},colorRgb(t,e,o){return`rgb(${t}, ${e}, ${o})`},formatColor(t){return c==="hex"?this.colorHex(t[0],t[1],t[2]):this.colorRgb(t[0],t[1],t[2])}}}export{g as default};
